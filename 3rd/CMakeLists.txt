cmake_minimum_required(VERSION 3.0.2)

set(SDL_SHARED_ENABLED_BY_DEFAULT OFF CACHE BOOL "Build static SDL2")
option(DIRECTX "Disable DirectX" OFF)
option(RENDER_D3D "Disable Direct3D" OFF)
if(WIN32)
    option(VIDEO_OPENGLES "Disable OpenGL ES on Windows" OFF)
endif()
add_subdirectory(SDL2-2.0.4)
set(SDL2_INCLUDES ${SDL2_SOURCE_DIR}/include PARENT_SCOPE)
set(SDL2_INCLUDES ${SDL2_SOURCE_DIR}/include)

project(SDL2_mixer)
set(VB SDL2_mixer-2.0.1/external/libvorbis-1.3.3/lib)
set(VB_SOURCES ${VB}/mdct.c ${VB}/smallft.c ${VB}/block.c ${VB}/envelope.c ${VB}/window.c ${VB}/lsp.c ${VB}/lpc.c ${VB}/analysis.c ${VB}/synthesis.c ${VB}/psy.c ${VB}/info.c ${VB}/floor1.c ${VB}/floor0.c ${VB}/res0.c ${VB}/mapping0.c ${VB}/registry.c ${VB}/codebook.c ${VB}/sharedbook.c ${VB}/lookup.c ${VB}/bitrate.c ${VB}/vorbisfile.c)
file(GLOB SDL2_mixer_SOURCES SDL2_mixer-2.0.1/*.c SDL2_mixer-2.0.1/external/libogg-1.3.1/src/*.c ${VB_SOURCES})
add_library(SDL2_mixer STATIC ${SDL2_mixer_SOURCES})
target_include_directories(SDL2_mixer PRIVATE ${SDL2_INCLUDES})
target_compile_definitions(SDL2_mixer PRIVATE -DOGG_MUSIC)
set(SDL2_mixer_INCLUDES ${SDL2_mixer_SOURCE_DIR}/SDL2_mixer-2.0.1 PARENT_SCOPE)

project(SDL2_net)
file(GLOB SDL2_net_SOURCES SDL2_net-2.0.1/*.c)
add_library(SDL2_net STATIC ${SDL2_net_SOURCES})
target_include_directories(SDL2_net PRIVATE ${SDL2_INCLUDES})
set(SDL2_net_INCLUDES ${SDL2_net_SOURCE_DIR}/SDL2_net-2.0.1 PARENT_SCOPE)

project(SDL2_image)
file(GLOB SDL2_image_SOURCES SDL2_image-2.0.1/*.c SDL2_image-2.0.1/external/libpng-1.6.2/*.c SDL2_image-2.0.1/external/zlib-1.2.8/*.c)
add_library(SDL2_image STATIC ${SDL2_image_SOURCES})
target_include_directories(SDL2_image PRIVATE ${SDL2_INCLUDES})
target_compile_definitions(SDL2_image PRIVATE -DLOAD_BMP -DLOAD_GIF -DLOAD_LBM -DLOAD_PCX -DLOAD_PNM -DLOAD_TGA -DLOAD_XCF -DLOAD_XPM -DLOAD_XV -DLOAD_PNG)
set(SDL2_image_INCLUDES ${SDL2_image_SOURCE_DIR}/SDL2_image-2.0.1 PARENT_SCOPE)

option(JSONCPP_WITH_TESTS "Disable tests" OFF)
option(JSONCPP_WITH_POST_BUILD_UNITTEST "Disable unit-tests" OFF)
option(JSONCPP_WITH_PKGCONFIG_SUPPORT "Disable pkg-config" OFF)
option(BUILD_SHARED_LIBS "Build jsoncpp_lib as a shared library." OFF)
add_subdirectory(jsoncpp-1.7.4)
set(JSONCPP_INCLUDES ${jsoncpp_SOURCE_DIR}/include PARENT_SCOPE)

set(BUILD_SHARED_LIBS OFF CACHE BOOL "Build static freetype")
add_subdirectory(freetype-2.6.5)
set(freetype_INCLUDES ${freetype_SOURCE_DIR}/include PARENT_SCOPE)
set(freetype_INCLUDES ${freetype_SOURCE_DIR}/include)

project(SDL2_ttf)
file(GLOB SDL2_ttf_SOURCES SDL2_ttf-2.0.14/*.c)
add_library(SDL2_ttf STATIC ${SDL2_ttf_SOURCES})
target_include_directories(SDL2_ttf PRIVATE ${SDL2_INCLUDES} ${freetype_INCLUDES})
set(SDL2_ttf_INCLUDES ${SDL2_ttf_SOURCE_DIR}/SDL2_ttf-2.0.14 PARENT_SCOPE)

if(WIN32)
    project(glew)
    file(GLOB glew_SOURCES glew-2.0.0/src/glew.c)
    add_library(glew STATIC ${glew_SOURCES})
    target_include_directories(glew PRIVATE glew-2.0.0/include)
    target_compile_definitions(glew PRIVATE -DGLEW_NO_GLU -DGLEW_BUILD)
    set(glew_INCLUDES ${glew_SOURCE_DIR}/glew-2.0.0/include PARENT_SCOPE)
endif()
